stages:
  - prepare
  - analyze
  - build
  - upload
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # - if: $CI_COMMIT_TAG

.analyze-job-template:
  stage: analyze
  interruptible: true
  dependencies: []
  image:
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_PROJECT_ID}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
      - .sonar/cache
  # rules:
  #   - if: $CI_COMMIT_TAG

analyze-backend:
  extends:
    - .analyze-job-template
  image:
    name: maven:3-jdk-11
  script:
    - cd snmc-backend
    - mvn -B -s "${CI_PROJECT_DIR}/.m2/settings.xml" -Dsonar.projectVersion="$CI_COMMIT_REF_NAME" -Dmaven.repo.local="${CI_PROJECT_DIR}/.m2/repository" verify sonar:sonar
    
# analyze-gateway:
#   extends:
#     - .analyze-job-template
#   before_script:
#     - cd "${CI_PROJECT_DIR}/gateway"

# analyze-frontend:
#   extends:
#     - .analyze-job-template
#   image:
#     name: sonarsource/sonar-scanner-cli:4
#   script:
#     - sonar-scanner -Dsonar.qualitygate.wait=true

.build-job-template:
  stage: build
  interruptible: true
  dependencies: [ ]
  image:
    name: maven:3-jdk-11
    entrypoint: [ "" ]
  cache:
    key: "${CI_PROJECT_ID}-${CI_JOB_NAME}"
    paths: [ ".m2/repository" ]
  script:
    - mvn -f "${CI_PROJECT_DIR}/snmc-backend/pom.xml" -B -DskipTests -s "${CI_PROJECT_DIR}/.m2/settings.xml" -Dmaven.repo.local="${CI_PROJECT_DIR}/.m2/repository" -U clean package

build-backend:
  extends:
    - .build-job-template
  artifacts:
    paths: [ "${CI_PROJECT_DIR}/snmc-backend/target/*.jar" ]

#build-gateway:
#  extends:
#    - .build-job-template
#  artifacts:
#    paths: [ "gateway/target/*.jar" ]
#  before_script:
#    - cd gateway

build-frontend:
  extends:
    - .build-job-template
  image:
    name: node:14.15.0
  cache:
    paths: [ "${CI_PROJECT_DIR}/snmc-frontend/node_modules" ]
  artifacts:
    paths: [ "${CI_PROJECT_DIR}/snmc-frontend/dist" ]
  script:
    - cd snmc-frontend
    - npm --progress false rebuild node-sass
    - npm --progress false install
    - npm --progress false run build --prod
#   - tar czf dist.tar.gz -C dist .

.docker-image-template:
  stage: upload
  image: docker:20.10
  services:
    - docker:20.10-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u "$NEXUS_USERNAME" -p "$NEXUS_PASSWORD" registry.cnj.jus.br

upload-backend:
  extends:
    - .docker-image-template
  dependencies: [ build-backend ]
  script:
    - cp "${CI_PROJECT_DIR}"/snmc-backend/target/*.jar app.jar
    - docker build --pull -t "registry.cnj.jus.br/snmc/backend:$CI_COMMIT_REF_NAME" -t "registry.cnj.jus.br/snmc/backend:latest" .
    - docker push "registry.cnj.jus.br/snmc/backend:$CI_COMMIT_REF_NAME"
    - docker push "registry.cnj.jus.br/snmc/backend:latest"

#upload-gateway:
#  extends:
#    - .docker-image-template
#  dependencies: [ build-gateway ]
#  script:
#    - cp gateway/target/*.jar gateway/src/main/docker/app.jar
#    - docker build --pull -t "registry.cnj.jus.br/snmc/gateway:$CI_COMMIT_REF_NAME" -t "registry.cnj.jus.br/snmc/gateway:latest" "$CI_PROJECT_DIR/gateway/src/main/docker"
#    - docker push "registry.cnj.jus.br/snmc/gateway:$CI_COMMIT_REF_NAME"
#    - docker push "registry.cnj.jus.br/snmc/gateway:latest"

upload-frontend:
  extends:
    - .docker-image-template
  dependencies: [ build-frontend ]
  script:
    - cp "${CI_PROJECT_DIR}"/snmc-frontend/docker/nginx/proxy.conf "${CI_PROJECT_DIR}/snmc-frontend"
    - cp "${CI_PROJECT_DIR}"/snmc-frontend/docker/nginx/env.sh "${CI_PROJECT_DIR}/snmc-frontend"
    - docker build --pull -t "registry.cnj.jus.br/snmc/frontend:$CI_COMMIT_REF_NAME" -t "registry.cnj.jus.br/snmc/frontend:latest" "${CI_PROJECT_DIR}/snmc-frontend"
    - docker push "registry.cnj.jus.br/snmc/frontend:$CI_COMMIT_REF_NAME"
    - docker push "registry.cnj.jus.br/snmc/frontend:latest"

release-job:
  stage: upload
  dependencies: [ ]
  image:
    name: registry.gitlab.com/gitlab-org/release-cli:latest
    entrypoint: [ "" ]
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    GIT_STRATEGY: none
  script:
    - release-cli create --tag-name "${CI_COMMIT_TAG}" --description "${CI_COMMIT_MESSAGE}"

.env-staging-cnj:
  environment:
    name: staging-cnj
    deployment_tier: staging
    url: https://snmc.stg.cloud.cnj.jus.br
    kubernetes:
      namespace: dcor-snmc

#.env-production-cnj:
#  environment:
#    name: production-cnj
#    deployment_tier: production
#   url: https://protocolos.cloud.cnj.jus.br
#    kubernetes:
#      namespace: dcor-snmc

.prepare-job-template:
  stage: prepare
  interruptible: true
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  dependencies: [ ]
  artifacts:
    paths: [ "kubernetes/" ]
  environment:
    action: prepare
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - kustomize edit set namespace "$KUBE_NAMESPACE"
    - kustomize edit set image "registry.cnj.jus.br/snmc/.*:$CI_COMMIT_REF_NAME"
    - kustomize edit add annotation --force "app.gitlab.com/app:${CI_PROJECT_PATH_SLUG}"
      "app.gitlab.com/env:${CI_ENVIRONMENT_SLUG}" "app.gitlab.com/commit-short-sha:${CI_COMMIT_SHORT_SHA}"
    - kubectl apply --dry-run=client -k .

prepare-stg-cnj:
  extends:
    - .prepare-job-template
    - .env-staging-cnj

#prepare-prd-cnj:
#  extends:
#    - .prepare-job-template
#    - .env-production-cnj

.deploy-job-template:
  stage: deploy
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  retry:
    max: 2
    when: stuck_or_timeout_failure
  variables:
    GIT_STRATEGY: none
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - kubectl apply -k . || (kubectl delete --ignore-not-found --wait -k . && kubectl apply -k .)

deploy-stg-cnj:
  extends:
    - .deploy-job-template
    - .env-staging-cnj
  dependencies: [ "prepare-stg-cnj" ]

#deploy-prd-cnj:
#  extends:
#    - .deploy-job-template
#    - .env-production-cnj
#  dependencies: [ "prepare-prd-cnj" ]
#  when: manual


